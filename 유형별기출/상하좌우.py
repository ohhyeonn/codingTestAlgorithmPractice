# 문제
# N 과 L R U D 로 이루어진 1차원 배열을 받는다.
# N 은 N * N 의 2차원 배열을 이루게 된다. 
# 2차원 배열의 제일 왼쪽위에는 (1,1) 이되고 제일 오른쪾 아래가 (N,N)가 된다.
# (1,1) 에서 1차원 배열로 받은 여행지대로 움직일때 최종의 위치를 출력하는 프로그램을 작성하라.
# 오른쪽으로 움직이면 y 가 증가하고 아래로 움직이면 x가 증가 하게되고 여행지시가 (N,N)을 초과하게되면 무효로 무시하면 된다.
# 
# 입력조건
# 첫째 줄에 공간의 크기를 나타내는 N이 주어진다. (1 <= N <= 100)
#  둘째줄에 여행가 A가 이동할 계획서 내용이 주어진다. (1<= 이동 횟수 <= 100)
#  
#
# 출력조건 
# 첫째 줄에 여행가 A가 최종적으로 도착할 지점의 좌표 (X,Y)를 공백으로 구분하여 출력한다.


# 구현문제 이다 구현하면 된다.

# N을 입력받는다.
n = int(input())
x,y = 1, 1
plans = input().split()

# L R U D 에 따른 이동 방향
dx = [ 0, 0, -1, 1 ]
dy = [ -1 , 1, 0,0 ]
move_types = ['L' , 'R', 'U' , 'D' ]

# 이동계획을 하나씩 확인
for plan in plans:
    for i in range(len(move_types)):
        if plan == move_types[i]:
            nx = x + dx[i]
            ny = y + dy[i]
    #공간을 벗어나는 경우 무시
    if nx < 1 or ny < 1 or nx > n or ny > n:
        continue
    x , y = nx , ny

print(x,y)