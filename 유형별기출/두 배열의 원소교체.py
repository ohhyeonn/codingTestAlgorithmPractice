# 간단한 문제인데 항상 시간과 메모리를 생각해야 한다는것을 기억한다.



# 입력조건
# 첫번째 줄에 n,k 공백으로 구분되어 입력된다. ( 1<= n <= 100,000  ,  0 <= k <= n)
# 두번째 줄에 배열 A의 원소들이 공백으로 구분되어 입력된다. 모든 원소는 10,000,000 보다 작은 자연수이다.
# 세번째 줄에 배열 B 의원소들이 공백으로 구분된어 입력된다. 모든 원소는 10,000,000 보다 작은 자연수 이다.

# 출력조건
# 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력한다.






n , k = map(int , input().split()) # N과 K를 입력받기
a = list(map(int, input().split())) # 배열 A의 모든 우너소를 입력받기
b = list(map(int, input().split())) # 배열 B의 모든 원소를 입력받기

a.sort()  #배열 A는 오름차순 정렬 수행
b.sort(reverse=True) # 배열 B는 모든 원소를 입력받기

# 첫번째 인ㄷ게스부터 확ㅇ긴하며 ,두 배열의 원소를 최대 K번 비교
for i in range(k):
    # A의 원소가 B의 원소보다 작은 경우
    if a[i] < b[i]:
        # 두 원소를 교체
        a[i], b [i] = b[i], a[i]
    else : # A의 원소가 B 의 원소보다 크거나 같을때 , 반복문을 탈출
        break

print(sum(a)) # 배열 A의 모든 우너소의 합을 출력